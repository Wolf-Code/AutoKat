// <auto-generated />
using AutoKat.Core.Users;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using System;
using System.Net;

namespace AutoKat.Data.Migrations
{
	[DbContext(typeof(AutoKatContext))]
	partial class AutoKatContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.UseIdentityByDefaultColumns()
				.HasAnnotation("Relational:MaxIdentifierLength", 63)
				.HasAnnotation("ProductVersion", "5.0.2");

			modelBuilder.Entity("AutoKat.Data.Devices.Entities.Device", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<string>("MacAddress")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("text");

					b.Property<int>("UserId")
						.HasColumnType("integer");

					b.HasKey("Id");

					b.HasIndex("UserId");

					b.ToTable("Device");
				});

			modelBuilder.Entity("AutoKat.Data.Feedings.Entities.Feeding", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<decimal>("AmountAfter")
						.HasColumnType("numeric");

					b.Property<decimal>("AmountBefore")
						.HasColumnType("numeric");

					b.Property<Guid?>("DeviceId")
						.HasColumnType("uuid");

					b.Property<DateTime>("FeedingEnd")
						.HasColumnType("timestamp without time zone");

					b.Property<DateTime>("FeedingStart")
						.HasColumnType("timestamp without time zone");

					b.HasKey("Id");

					b.HasIndex("DeviceId");

					b.ToTable("Feeding");
				});

			modelBuilder.Entity("AutoKat.Data.Sessions.Entities.Session", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uuid");

					b.Property<Guid?>("DeviceId")
						.HasColumnType("uuid");

					b.Property<IPAddress>("IP")
						.IsRequired()
						.HasColumnType("inet");

					b.Property<DateTime>("SessionEnd")
						.HasColumnType("timestamp without time zone");

					b.Property<DateTime>("SessionStart")
						.HasColumnType("timestamp without time zone");

					b.Property<string>("Token")
						.IsRequired()
						.HasColumnType("text");

					b.Property<int?>("UserId")
						.HasColumnType("integer");

					b.HasKey("Id");

					b.HasIndex("DeviceId");

					b.HasIndex("UserId");

					b.ToTable("Session");
				});

			modelBuilder.Entity("AutoKat.Data.Users.Entities.User", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("integer")
						.UseIdentityByDefaultColumn();

					b.Property<string>("Email")
						.IsRequired()
						.HasColumnType("text");

					b.Property<string>("Password")
						.IsRequired()
						.HasMaxLength(128)
						.HasColumnType("character varying(128)");

					b.Property<UserPreferences>("Preferences")
						.HasColumnType("jsonb");

					b.Property<byte[]>("Salt")
						.IsRequired()
						.HasColumnType("bytea");

					b.HasKey("Id");

					b.ToTable("User");
				});

			modelBuilder.Entity("AutoKat.Data.Devices.Entities.Device", b =>
				{
					b.HasOne("AutoKat.Data.Users.Entities.User", "User")
						.WithMany()
						.HasForeignKey("UserId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("User");
				});

			modelBuilder.Entity("AutoKat.Data.Feedings.Entities.Feeding", b =>
				{
					b.HasOne("AutoKat.Data.Devices.Entities.Device", "Device")
						.WithMany()
						.HasForeignKey("DeviceId");

					b.Navigation("Device");
				});

			modelBuilder.Entity("AutoKat.Data.Sessions.Entities.Session", b =>
				{
					b.HasOne("AutoKat.Data.Devices.Entities.Device", "Device")
						.WithMany()
						.HasForeignKey("DeviceId");

					b.HasOne("AutoKat.Data.Users.Entities.User", "User")
						.WithMany()
						.HasForeignKey("UserId");

					b.Navigation("Device");

					b.Navigation("User");
				});
#pragma warning restore 612, 618
		}
	}
}
